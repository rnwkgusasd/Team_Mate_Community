{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\asdasd\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\asdasd\\\\test\\\\src\\\\views\\\\Components\\\\Sections\\\\ChatButton.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport Chat from '@material-ui/icons/Chat';\nimport Face from '@material-ui/icons/Face';\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    appBar: {\n      position: 'relative'\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1\n    }\n  };\n});\nvar Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n});\nexport default function FullScreenDialog() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Button, {\n    justIcon: true,\n    round: true,\n    color: \"info\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Chat, {\n    className: classes.Icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"Close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Chat\"))), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Face, {\n    style: {\n      margin: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: \"\\uB313\\uAE00\\uC758 \\uB0B4\\uC6A9\\uC774 \\uC785\\uB825\\uB429\\uB2C8\\uB2E4.\",\n    secondary: \"3201 \\uAD6C\\uC790\\uD604\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Face, {\n    style: {\n      margin: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: \"\\uB313\\uAE00\\uC758 \\uB0B4\\uC6A9\\uC774 \\uC785\\uB825\\uB429\\uB2C8\\uB2E4.\",\n    secondary: \"3204 \\uAE40\\uBBFC\\uADDC\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    style: {\n      margin: \"50px\"\n    },\n    id: \"regular\",\n    inputProps: {\n      placeholder: \"Regular\"\n    },\n    formControlProps: {\n      fullWidth: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\asdasd\\test\\src\\views\\Components\\Sections\\ChatButton.js"],"names":["React","makeStyles","Dialog","ListItemText","ListItem","List","Divider","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","Chat","Face","CustomInput","GridContainer","GridItem","Button","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","Transition","forwardRef","props","ref","FullScreenDialog","classes","useState","open","setOpen","handleClickOpen","handleClose","Icon","margin","placeholder","fullWidth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Chat from '@material-ui/icons/Chat';\r\nimport Face from '@material-ui/icons/Face';\r\n\r\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\r\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\r\nimport GridItem from \"components/Grid/GridItem.jsx\";\r\nimport Button from \"components/CustomButtons/Button.jsx\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button justIcon round color=\"info\" onClick={handleClickOpen}>\r\n        <Chat className={classes.Icon} />\r\n      </Button>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Chat\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem>\r\n            <Face style={{margin:\"20px\"}} />\r\n            <ListItemText primary=\"댓글의 내용이 입력됩니다.\" secondary=\"3201 구자현\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <Face style={{margin:\"20px\"}} />\r\n            <ListItemText primary=\"댓글의 내용이 입력됩니다.\" secondary=\"3204 김민규\" />\r\n          </ListItem>\r\n        </List>\r\n        <GridContainer>\r\n          <GridItem>\r\n            <CustomInput style={{margin:\"50px\"}} id=\"regular\"\r\n            inputProps={{placeholder: \"Regular\"}}\r\n            formControlProps={{ fullWidth: true }} />\r\n          </GridItem>\r\n        </GridContainer>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}