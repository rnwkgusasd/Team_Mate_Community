{"ast":null,"code":"import _defineProperty from \"D:\\\\Documents\\\\GitHub\\\\Team_Mate_Community\\\\fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Documents\\\\GitHub\\\\Team_Mate_Community\\\\fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Documents\\\\GitHub\\\\Team_Mate_Community\\\\fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Documents\\\\GitHub\\\\Team_Mate_Community\\\\fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Documents\\\\GitHub\\\\Team_Mate_Community\\\\fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Documents\\\\GitHub\\\\Team_Mate_Community\\\\fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\Team_Mate_Community\\\\fe\\\\src\\\\components\\\\CustomDropdown\\\\CustomDropdown.jsx\";\nimport React from \"react\";\nimport axios from 'axios'; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Popper from \"@material-ui/core/Popper\"; // core components\n\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport customDropdownStyle from \"assets/jss/material-kit-react/components/customDropdownStyle.jsx\";\nimport AddDialog from \"components/Header/AddNoteDialog.js\";\n\nvar CustomDropdown =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomDropdown, _React$Component);\n\n  function CustomDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, CustomDropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomDropdown).call(this, props));\n\n    _this.handleClick = function () {\n      _this.setState(function (state) {\n        return {\n          open: !state.open\n        };\n      });\n    };\n\n    _this.handleClose = function (param) {\n      _this.setState({\n        open: false\n      });\n\n      if (_this.props && _this.props.onClick) {\n        _this.props.onClick(param);\n      }\n    };\n\n    _this.desctask = function (taskname) {\n      if (taskname == \"Edit\") {\n        AddDialog.setOpen(true);\n      }\n\n      if (taskname == \"Remove\") {\n        _this.state.id = localStorage.getItem('desc_' + _this.props.id);\n        console.log(_this.state.id, \"dd\");\n        axios[\"delete\"](\"http://localhost:8080/api/comm/\".concat(_this.state.id)).then(function (r) {\n          alert(\"삭제 성공\");\n          window.location.reload();\n        })[\"catch\"](function (e) {\n          console.error(e.message);\n        });\n      }\n    };\n\n    _this.handleCloseAway = function (event) {\n      if (_this.anchorEl.contains(event.target)) {\n        return;\n      }\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.state = {\n      open: false,\n      id: 0,\n      editdialog: false\n    };\n    return _this;\n  }\n\n  _createClass(CustomDropdown, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames,\n          _classNames2,\n          _this2 = this,\n          _classNames3;\n\n      var open = this.state.open;\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          buttonText = _this$props.buttonText,\n          buttonIcon = _this$props.buttonIcon,\n          dropdownList = _this$props.dropdownList,\n          buttonProps = _this$props.buttonProps,\n          dropup = _this$props.dropup,\n          dropdownHeader = _this$props.dropdownHeader,\n          caret = _this$props.caret,\n          hoverColor = _this$props.hoverColor,\n          left = _this$props.left,\n          rtlActive = _this$props.rtlActive,\n          noLiPadding = _this$props.noLiPadding;\n      var caretClasses = classNames((_classNames = {}, _defineProperty(_classNames, classes.caret, true), _defineProperty(_classNames, classes.caretActive, open), _defineProperty(_classNames, classes.caretRTL, rtlActive), _classNames));\n      var dropdownItem = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.dropdownItem, true), _defineProperty(_classNames2, classes[hoverColor + \"Hover\"], true), _defineProperty(_classNames2, classes.noLiPadding, noLiPadding), _defineProperty(_classNames2, classes.dropdownItemRTL, rtlActive), _classNames2));\n      var icon = null;\n\n      switch (typeof buttonIcon) {\n        case \"object\":\n          icon = React.createElement(this.props.buttonIcon, {\n            className: classes.buttonIcon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          });\n          break;\n\n        case \"string\":\n          icon = React.createElement(Icon, {\n            className: classes.buttonIcon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, this.props.buttonIcon);\n          break;\n\n        default:\n          icon = null;\n          break;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Button, Object.assign({\n        \"aria-label\": \"Notifications\",\n        \"aria-owns\": open ? \"menu-list\" : null,\n        \"aria-haspopup\": \"true\"\n      }, buttonProps, {\n        buttonRef: function buttonRef(node) {\n          _this2.anchorEl = node;\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), icon, buttonText !== undefined ? buttonText : null, caret ? React.createElement(\"b\", {\n        className: caretClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }) : null)), React.createElement(Popper, {\n        open: open,\n        anchorEl: this.anchorEl,\n        transition: true,\n        disablePortal: true,\n        placement: dropup ? left ? \"top-start\" : \"top\" : left ? \"bottom-start\" : \"bottom\",\n        className: classNames((_classNames3 = {}, _defineProperty(_classNames3, classes.popperClose, !open), _defineProperty(_classNames3, classes.popperResponsive, true), _classNames3)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, function () {\n        return React.createElement(Grow, {\n          \"in\": open,\n          id: \"menu-list\",\n          style: dropup ? {\n            transformOrigin: \"0 100% 0\"\n          } : {\n            transformOrigin: \"0 0 0\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(Paper, {\n          className: classes.dropdown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(ClickAwayListener, {\n          onClickAway: _this2.handleCloseAway,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(MenuList, {\n          role: \"menu\",\n          className: classes.menuList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, dropdownHeader !== undefined ? React.createElement(MenuItem, {\n          onClick: function onClick() {\n            return _this2.handleClose(dropdownHeader);\n          },\n          className: classes.dropdownHeader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, dropdownHeader) : null, dropdownList.map(function (prop, key) {\n          if (prop.divider) {\n            return React.createElement(Divider, {\n              key: key,\n              onClick: function onClick() {\n                return _this2.handleClose(\"divider\");\n              },\n              className: classes.dropdownDividerItem,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 170\n              },\n              __self: this\n            });\n          }\n\n          return React.createElement(MenuItem, {\n            key: key,\n            onClick: function onClick(r) {\n              return _this2.desctask(r.nativeEvent.target.outerText);\n            },\n            className: dropdownItem,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }, prop);\n        })))));\n      }));\n    }\n  }]);\n\n  return CustomDropdown;\n}(React.Component);\n\nCustomDropdown.defaultProps = {\n  caret: true,\n  hoverColor: \"gray\"\n};\nCustomDropdown.propTypes = {\n  classes: PropTypes.object.isRequired,\n  hoverColor: PropTypes.oneOf([\"black\", \"primary\", \"info\", \"success\", \"warning\", \"danger\", \"rose\"]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  dropdownHeader: PropTypes.node,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  left: PropTypes.bool,\n  noLiPadding: PropTypes.bool,\n  // function that retuns the selected item\n  onClick: PropTypes.func\n};\nexport default withStyles(customDropdownStyle)(CustomDropdown);","map":{"version":3,"sources":["D:\\Documents\\GitHub\\Team_Mate_Community\\fe\\src\\components\\CustomDropdown\\CustomDropdown.jsx"],"names":["React","axios","classNames","PropTypes","withStyles","MenuItem","MenuList","ClickAwayListener","Paper","Grow","Divider","Icon","Popper","Button","customDropdownStyle","AddDialog","CustomDropdown","props","handleClick","setState","state","open","handleClose","param","onClick","desctask","taskname","setOpen","id","localStorage","getItem","console","log","then","r","alert","window","location","reload","e","error","message","handleCloseAway","event","anchorEl","contains","target","editdialog","classes","buttonText","buttonIcon","dropdownList","buttonProps","dropup","dropdownHeader","caret","hoverColor","left","rtlActive","noLiPadding","caretClasses","caretActive","caretRTL","dropdownItem","dropdownItemRTL","icon","node","undefined","popperClose","popperResponsive","transformOrigin","dropdown","menuList","map","prop","key","divider","dropdownDividerItem","nativeEvent","outerText","Component","defaultProps","propTypes","object","isRequired","oneOf","oneOfType","string","array","bool","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @material-ui/core components\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\n\r\n// core components\r\nimport Button from \"components/CustomButtons/Button.jsx\";\r\n\r\nimport customDropdownStyle from \"assets/jss/material-kit-react/components/customDropdownStyle.jsx\";\r\nimport AddDialog from \"components/Header/AddNoteDialog.js\";\r\n\r\nclass CustomDropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      id:0,\r\n      editdialog:false\r\n    };\r\n  }\r\n  handleClick = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n  handleClose = param => {\r\n    this.setState({ open: false });\r\n    if (this.props && this.props.onClick) {\r\n      this.props.onClick(param);\r\n    }\r\n  };\r\n  desctask = taskname=>{\r\n    if(taskname==\"Edit\"){\r\n      AddDialog.setOpen(true)\r\n    }\r\n    if(taskname==\"Remove\"){\r\n      this.state.id=localStorage.getItem('desc_'+this.props.id)\r\n      console.log(this.state.id,\"dd\")\r\n      axios.delete(`http://localhost:8080/api/comm/${this.state.id}`)\r\n        .then((r) => {\r\n          alert(\"삭제 성공\")\r\n          window.location.reload()\r\n        })\r\n        .catch((e) => {\r\n          console.error(e.message)\r\n        })\r\n    }\r\n  }\r\n  handleCloseAway = event => {\r\n    if (this.anchorEl.contains(event.target)) {\r\n      return;\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n  render() {\r\n    \r\n    const { open } = this.state;\r\n    const {\r\n      classes,\r\n      buttonText,\r\n      buttonIcon,\r\n      dropdownList,\r\n      buttonProps,\r\n      dropup,\r\n      dropdownHeader,\r\n      caret,\r\n      hoverColor,\r\n      left,\r\n      rtlActive,\r\n      noLiPadding\r\n    } = this.props;\r\n    const caretClasses = classNames({\r\n      [classes.caret]: true,\r\n      [classes.caretActive]: open,\r\n      [classes.caretRTL]: rtlActive\r\n    });\r\n    const dropdownItem = classNames({\r\n      [classes.dropdownItem]: true,\r\n      [classes[hoverColor + \"Hover\"]]: true,\r\n      [classes.noLiPadding]: noLiPadding,\r\n      [classes.dropdownItemRTL]: rtlActive\r\n    });\r\n    let icon = null;\r\n    switch (typeof buttonIcon) {\r\n      case \"object\":\r\n        icon = <this.props.buttonIcon className={classes.buttonIcon} />;\r\n        break;\r\n      case \"string\":\r\n        icon = (\r\n          <Icon className={classes.buttonIcon}>{this.props.buttonIcon}</Icon>\r\n        );\r\n        break;\r\n      default:\r\n        icon = null;\r\n        break;\r\n    }\r\n    return (\r\n\r\n      <div>\r\n        <div>\r\n          <Button\r\n            aria-label=\"Notifications\"\r\n            aria-owns={open ? \"menu-list\" : null}\r\n            aria-haspopup=\"true\"\r\n            {...buttonProps}\r\n            buttonRef={node => {\r\n              this.anchorEl = node;\r\n            }}\r\n            onClick={this.handleClick}\r\n          >\r\n            {icon}\r\n            {buttonText !== undefined ? buttonText : null}\r\n            {caret ? <b className={caretClasses} /> : null}\r\n          </Button>\r\n        </div>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={this.anchorEl}\r\n          transition\r\n          disablePortal\r\n          placement={\r\n            dropup\r\n              ? left\r\n                ? \"top-start\"\r\n                : \"top\"\r\n              : left\r\n              ? \"bottom-start\"\r\n              : \"bottom\"\r\n          }\r\n          className={classNames({\r\n            [classes.popperClose]: !open,\r\n            [classes.popperResponsive]: true\r\n          })}\r\n        >\r\n          {() => (\r\n            <Grow\r\n              in={open}\r\n              id=\"menu-list\"\r\n              style={\r\n                dropup\r\n                  ? { transformOrigin: \"0 100% 0\" }\r\n                  : { transformOrigin: \"0 0 0\" }\r\n              }\r\n            >\r\n              <Paper className={classes.dropdown}>\r\n                <ClickAwayListener onClickAway={this.handleCloseAway}>\r\n                  <MenuList role=\"menu\" className={classes.menuList}>\r\n                    {dropdownHeader !== undefined ? (\r\n                      <MenuItem\r\n                        onClick={() => this.handleClose(dropdownHeader)}\r\n                        className={classes.dropdownHeader}\r\n                      >\r\n                        {dropdownHeader}\r\n                      </MenuItem>\r\n                    ) : null}\r\n                    {dropdownList.map((prop, key) => {\r\n                      if (prop.divider) {\r\n                        return (\r\n                          <Divider\r\n                            key={key}\r\n                            onClick={() => this.handleClose(\"divider\")}\r\n                            className={classes.dropdownDividerItem}\r\n                          />\r\n                        );\r\n                      }\r\n                      return (\r\n                        <MenuItem\r\n                          key={key}\r\n                          onClick={(r) => this.desctask(r.nativeEvent.target.outerText)}\r\n                          className={dropdownItem}\r\n                        >\r\n                          {prop}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCustomDropdown.defaultProps = {\r\n  caret: true,\r\n  hoverColor: \"gray\"\r\n};\r\n\r\nCustomDropdown.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  hoverColor: PropTypes.oneOf([\r\n    \"black\",\r\n    \"primary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"rose\"\r\n  ]),\r\n  buttonText: PropTypes.node,\r\n  buttonIcon: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  dropdownList: PropTypes.array,\r\n  buttonProps: PropTypes.object,\r\n  dropup: PropTypes.bool,\r\n  dropdownHeader: PropTypes.node,\r\n  rtlActive: PropTypes.bool,\r\n  caret: PropTypes.bool,\r\n  left: PropTypes.bool,\r\n  noLiPadding: PropTypes.bool,\r\n  // function that retuns the selected item\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default withStyles(customDropdownStyle)(CustomDropdown);\r\n"]},"metadata":{},"sourceType":"module"}